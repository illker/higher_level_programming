==============
matrix_divided
==============

Import module:

  >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Import matrix
    >>> matrix = [[1, 2, 3],[4, 5, 6]]

Print:

    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]

Interger:

    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> print(matrix_divided(matrix, 5))
    [[0.2, 0.4, 0.6], [0.8, 1.0, 1.2]]

floats: 

    >>> print(matrix_divided(matrix, 3.2))
    [[0.31, 0.62, 0.94], [1.25, 1.56, 1.88]]

    >>> print(matrix_divided(matrix, 5.4))
    [[0.19, 0.37, 0.56], [0.74, 0.93, 1.11]]

Other cases:

    >>> print(matrix_divided(matrix,"xxx"))
    Traceback (most recent call last):
    ....
    TypeError: div must be a number

    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero
    
    >>> print(matrix_divided("Burger", 10))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[1, 3],[4, 5, 6]]

    >>> print(matrix_divided(matrix,5))
    Traceback (most recent call last):
    ...
    TypeError: Each n of the matrix must have the same size

    >>> matrix = [[1, 2, 3],["x", 5, 6]]

    >>> print(matrix_divided(matrix,5))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided())
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    >>> print(matrix_divided(matrix, 2, 3))
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() takes 2 positional arguments but 3 were given

    >>> print(matrix_divided(matrix, 2, 3, "a"))
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() takes 2 positional arguments but 4 were given
